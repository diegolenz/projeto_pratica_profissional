/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.comercial.compra;

import gui.financeiro.CondicaoPagamento.PesquisarCondicaoPagamento;
import gui.modeltable.TableModelContas;
import gui.modeltable.TableModelItemProduto;
import gui.pessoas.fornecedores.PesquisarFornecedor;
import gui.produtos.PesquisarProduto;
import gui.servicos.CadastroServicoForm;
import gui.swing.DialogPadrao;
import gui.swing.SwingFormatterFactory;
import javafx.scene.input.KeyCode;
import lib.model.comercial.Compra;
import lib.model.financeiro.contas.ContaPagar;
import lib.model.comercial.ItemProduto;
import lib.model.comercial.frete.TipoFrete;
import lib.model.financeiro.CondicaoPagamento.CondicaoPagamento;
import lib.model.financeiro.parcela.Parcela;
import lib.model.interno.ModuloSistema;
import lib.model.interno.NivelAcessoModulo;
import lib.model.pessoa.fornecedor.Fornecedor;
import lib.model.produto.Produto;
import lib.service.CompraService;
import lib.service.CondicaoPagamentoService;
import lib.service.FornecedorService;
import lib.service.ProdutoService;
import util.Util;

import javax.swing.*;
import java.awt.*;
import java.sql.SQLException;
import java.util.*;
import java.util.List;

/**
 * @author Diego
 */

public class CadastroCompraForm extends DialogPadrao {

    private Compra compra;
    private ItemProduto itemProdutoSelecionado;
    private TableModelItemProduto tableModelProduto;
    private TableModelContas tableModelContas;
    private List<ContaPagar> contas;

    /**
     * Creates new form CadastroCompraForm
     */
    public CadastroCompraForm(Window parent, boolean modal, Compra compra) {
        super(parent, modal, ModuloSistema.COMPRAS, NivelAcessoModulo.LEITURA_GRAVACAO);
        initComponents();
        this.compra = compra;
        tableModelProduto = new TableModelItemProduto();
        tableModelContas = new TableModelContas();
        contas = new ArrayList<>();
        this.initDados();
    }

    public void carregar() {
        if (!compra.isAtivo()){
            lblStatus.setText("Cancelada");
            lblStatus.setForeground(Color.RED);
        }
        edtFornecedor.setText(compra.getFornecedor().getNome());
        edtCodFornecedor.setText(compra.getFornecedor().getId().toString());
        edtNumeroSerie.setText(compra.getNumSerieNota().toString());
        edtNumeroNota.setText(compra.getNumeroNota().toString());
        edtModeloNota.setText(compra.getModeloNota());
        edtDtEmissão.setDate(compra.getDtEmisssao());
        edtDtChegada.setDate(compra.getDtChegada());
        tableModelProduto.setList(compra.getItensProdutos().toArray());
        edtValorSeguro.setValue(compra.getValorSeguro());
        edtValorFrete.setValue(compra.getValorFrete());
        edtCustoTotal.setValue(compra.getTotalCompra());
        edtOutrasDespesas.setValue(compra.getOutrasDespesas());
        edtCodCondicaoPagamento.setText(compra.getCondicaoPagamento().getId().toString());
        edtCondicaoPagamento.setText(compra.getCondicaoPagamento().getNome());
        tableModelContas.setList(compra.getContas().toArray());
        tblContasApagar.setModel(tableModelContas);
        tableModelProduto.setList(compra.getItensProdutos().toArray());
        tblItens.setModel(tableModelProduto);
        if (compra.getTipoFrete().equals(TipoFrete.CIF))
            rdTipoFreteCIF.setSelected(true);
        else
            rdFreteFOB.setSelected(true);
        lblDescricaoForm.setText("Visualizar compra");
    }

    public void initDados() {
        this.edtDtChegada.setDate(new Date());
        this.edtDtEmissão.setDate(new Date());
        if (compra.getTipoFrete() == null)
            this.rdTipoFreteCIF.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        btnCancelar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        edtFuncionario = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        lblDescricaoForm = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        edtDtChegada = new com.toedter.calendar.JDateChooser();
        edtDtEmissão = new com.toedter.calendar.JDateChooser();
        edtModeloNota = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItens = new javax.swing.JTable();
        btnAlterarFornecedor = new javax.swing.JButton();
        btnAlterarFornecedor.setContentAreaFilled(false);
        btnAlterarFornecedor.setOpaque(true);
        btnAlterarFornecedor.setBackground(Color.white);
        edtFornecedor = new javax.swing.JTextField();
        btnRemoverItem = new javax.swing.JButton();
        btnRemoverItem.setContentAreaFilled(false);   btnRemoverItem.setOpaque(true);   btnRemoverItem.setBackground(Color.white);
        btnAlterarItem = new javax.swing.JButton();
        btnAlterarItem.setContentAreaFilled(false);   btnAlterarItem.setOpaque(true);   btnAlterarItem.setBackground(Color.white);
        edtNumeroNota = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        edtNumeroSerie = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        edtCodFornecedor = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblContasApagar = new javax.swing.JTable();
        lblDescricaoForm1 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        edtCondicaoPagamento = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        btnAltCondicao = new javax.swing.JButton();
        btnAltCondicao.setContentAreaFilled(false);
        btnAltCondicao.setOpaque(true);
        btnAltCondicao.setBackground(Color.white);
        jLabel20 = new javax.swing.JLabel();
        edtCodProduto = new javax.swing.JFormattedTextField();
        edtNome = new javax.swing.JTextField();
        btnPesquisarItem = new javax.swing.JButton();
        btnPesquisarItem.setContentAreaFilled(false);
        btnPesquisarItem.setOpaque(true);
        btnPesquisarItem.setBackground(Color.white);
        edtUnMedida = new javax.swing.JTextField();
        edtQuantItem = new javax.swing.JFormattedTextField();
        edtValorItem = new javax.swing.JFormattedTextField();
        edtDescItem = new javax.swing.JFormattedTextField();
        edtAcrescUn = new javax.swing.JFormattedTextField();
        edtCustoProduto = new javax.swing.JFormattedTextField();
        btnAddItem = new javax.swing.JButton();
        btnAddItem.setContentAreaFilled(false);   btnAddItem.setOpaque(true);   btnAddItem.setBackground(Color.white);
        lblCodProd = new javax.swing.JLabel();
        lblProd = new javax.swing.JLabel();
        lblUn = new javax.swing.JLabel();
        lblqtd = new javax.swing.JLabel();
        lblCusto = new javax.swing.JLabel();
        lblDescUn = new javax.swing.JLabel();
        lblAcrescUn = new javax.swing.JLabel();
        lblCustoProd = new javax.swing.JLabel();
        edtTotalDescontos = new javax.swing.JFormattedTextField();
        edtTotalAcrescimos = new javax.swing.JFormattedTextField();
        edtCustoTotal = new javax.swing.JFormattedTextField();
        edtCodCondicaoPagamento = new javax.swing.JFormattedTextField();
        edtOutrasDespesas = new javax.swing.JFormattedTextField();
        lblOutrasDespesas = new javax.swing.JLabel();
        edtValorSeguro = new javax.swing.JFormattedTextField();
        lblSeguro = new javax.swing.JLabel();
        edtValorFrete = new javax.swing.JFormattedTextField();
        lblValorFrete = new javax.swing.JLabel();
        rdFreteFOB = new javax.swing.JRadioButton();
        rdTipoFreteCIF = new javax.swing.JRadioButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nova compra");
        setResizable(false);

        btnCancelar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCancelar.setText("cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSalvar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSalvar.setText("salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        edtFuncionario.setEditable(false);
        edtFuncionario.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Funcionario");

        lblDescricaoForm.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDescricaoForm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shoppingcart_to_compra_12829 (1).png"))); // NOI18N
        lblDescricaoForm.setText("Nova compra");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        edtDtChegada.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        edtDtEmissão.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        edtModeloNota.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        edtModeloNota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtModeloNotaKeyPressed(evt);
            }
        });

        tblItens.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblItens.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(tblItens);
        if (tblItens.getColumnModel().getColumnCount() > 0) {
            tblItens.getColumnModel().getColumn(0).setPreferredWidth(5);
            tblItens.getColumnModel().getColumn(1).setPreferredWidth(25);
            tblItens.getColumnModel().getColumn(2).setPreferredWidth(10);
            tblItens.getColumnModel().getColumn(3).setPreferredWidth(10);
            tblItens.getColumnModel().getColumn(4).setPreferredWidth(10);
            tblItens.getColumnModel().getColumn(5).setPreferredWidth(10);
        }

        btnAlterarFornecedor.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        btnAlterarFornecedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pesquisar.png"))); // NOI18N
        btnAlterarFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarFornecedorActionPerformed(evt);
            }
        });

        edtFornecedor.setEditable(false);
        edtFornecedor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnRemoverItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erro_icon.png"))); // NOI18N
        btnRemoverItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverItemActionPerformed(evt);
            }
        });

        btnAlterarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edit_modify_icon-icons.com_72390.png"))); // NOI18N
        btnAlterarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarItemActionPerformed(evt);
            }
        });

        edtNumeroNota.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        edtNumeroNota.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        edtNumeroNota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtNumeroNotaKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Serie da nota *");

        edtNumeroSerie.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        edtNumeroSerie.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        edtNumeroSerie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtNumeroSerieKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Nm da nota *");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Modelo da nota *");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Data de emissão *");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Data de chegada *");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Código *");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Fornecedor *");

        edtCodFornecedor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        edtCodFornecedor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        edtCodFornecedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtCodFornecedorKeyPressed(evt);
            }
        });

        tblContasApagar.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tblContasApagar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblContasApagar.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(tblContasApagar);

        lblDescricaoForm1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDescricaoForm1.setText("Parcelas");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Condição de pagamento *");

        edtCondicaoPagamento.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Total de descontos");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("total do acresimo");

        btnAltCondicao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pesquisar.png"))); // NOI18N
        btnAltCondicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltCondicaoActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Valor Total");

        edtCodProduto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        edtCodProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtCodProdutoKeyPressed(evt);
            }
        });

        edtNome.setEditable(false);
        edtNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${itemProdutoSelecionado.nome}"), edtNome, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        btnPesquisarItem.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        btnPesquisarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pesquisar.png"))); // NOI18N
        btnPesquisarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarItemActionPerformed(evt);
            }
        });

        edtUnMedida.setEditable(false);
        edtUnMedida.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        edtQuantItem.setFormatterFactory(  SwingFormatterFactory.buildNumeroReal(0D, null));
        edtQuantItem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        edtQuantItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                calculaValorTotalPorItem(evt);
            }
        });

        edtValorItem.setFormatterFactory(  SwingFormatterFactory.buildMoeda(0D, null));
        edtValorItem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${itemProdutoSelecionado.valor}"), edtValorItem, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        edtValorItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                calculaValorTotalPorItem(evt);
            }
        });

        edtDescItem.setFormatterFactory(  SwingFormatterFactory.buildMoeda(0D, null));
        edtDescItem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${itemProdutoSelecionado.descontoUnitario}"), edtDescItem, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        edtDescItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                calculaValorTotalPorItem(evt);
            }
        });

        edtAcrescUn.setFormatterFactory(  SwingFormatterFactory.buildMoeda(0D, null));
        edtAcrescUn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${itemProdutoSelecionado.acrescimoUnitario}"), edtAcrescUn, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        edtAcrescUn.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                calculaValorTotalPorItem(evt);
            }
        });

        edtCustoProduto.setEditable(false);
        edtCustoProduto.setFormatterFactory(  SwingFormatterFactory.buildMoeda(0D, null));
        edtCustoProduto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${itemProdutoSelecionado.valorTotal}"), edtCustoProduto, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        btnAddItem.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        btnAddItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CertoIcon.png"))); // NOI18N
        btnAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemActionPerformed(evt);
            }
        });

        lblCodProd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCodProd.setText("Código");

        lblProd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblProd.setText("Produto");

        lblUn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblUn.setText("Und");

        lblqtd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblqtd.setText("Qtd");

        lblCusto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCusto.setText("Valor UN");

        lblDescUn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDescUn.setText("Desc UN");

        lblAcrescUn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblAcrescUn.setText("Acresc. UN");

        lblCustoProd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCustoProd.setText("Custo");

        edtTotalDescontos.setEditable(false);
        edtTotalDescontos.setFormatterFactory(  SwingFormatterFactory.buildNumeroReal(0D, 1000000D)
        );
        edtTotalDescontos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        edtTotalAcrescimos.setEditable(false);
        edtTotalAcrescimos.setFormatterFactory(  SwingFormatterFactory.buildMoeda(0D, 100000000D)
        );
        edtTotalAcrescimos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        edtCustoTotal.setEditable(false);
        edtCustoTotal.setFormatterFactory(  SwingFormatterFactory.buildMoeda(0D, null));
        edtCustoTotal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        edtCodCondicaoPagamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtCodCondicaoPagamentoKeyPressed(evt);
            }
        });

        edtOutrasDespesas.setFormatterFactory(  SwingFormatterFactory.buildMoeda(0D, null));
        edtOutrasDespesas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        edtOutrasDespesas.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                atualizaValoTotalCompra(evt);
            }
        });

        lblOutrasDespesas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblOutrasDespesas.setText("Outras despesas");

        edtValorSeguro.setFormatterFactory(  SwingFormatterFactory.buildMoeda(0D, null));
        edtValorSeguro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        edtValorSeguro.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                atualizaValoTotalCompra(evt);
            }
        });

        lblSeguro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSeguro.setText("Valor seguro");

        edtValorFrete.setFormatterFactory(  SwingFormatterFactory.buildMoeda(0D, null));
        edtValorFrete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        edtValorFrete.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                atualizaValoTotalCompra(evt);
            }
        });

        lblValorFrete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblValorFrete.setText("Valor frete");

        rdFreteFOB.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rdFreteFOB);
        rdFreteFOB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdFreteFOB.setText("FOB");

        rdTipoFreteCIF.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rdTipoFreteCIF);
        rdTipoFreteCIF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdTipoFreteCIF.setText("CIF");
        rdTipoFreteCIF.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdTipoFreteCIFItemStateChanged(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText("Tipo frete");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rdTipoFreteCIF)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rdFreteFOB)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblValorFrete)
                            .addComponent(edtValorFrete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(edtValorSeguro, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSeguro))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblOutrasDespesas)
                            .addComponent(edtOutrasDespesas, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(edtNumeroNota, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(edtNumeroSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addComponent(edtModeloNota, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6)
                            .addComponent(edtCodFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(edtFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlterarFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(edtDtEmissão, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(edtDtChegada, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addComponent(lblDescricaoForm1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblCodProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(edtCodProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(edtNome, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                                    .addComponent(lblProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPesquisarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(edtUnMedida, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblUn, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(edtQuantItem, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblqtd, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblCusto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(edtValorItem, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(edtDescItem, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblDescUn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAcrescUn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(edtAcrescUn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(lblCustoProd, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(edtCustoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 861, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlterarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoverItem, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel18)
                                    .addGap(211, 211, 211))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(edtCodCondicaoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(edtCondicaoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addComponent(btnAltCondicao, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(edtTotalDescontos, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(edtTotalAcrescimos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(45, 45, 45))
                                .addComponent(edtCustoTotal)))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 852, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(70, 70, 70))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(edtModeloNota, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                            .addComponent(edtNumeroSerie)
                            .addComponent(edtNumeroNota)
                            .addComponent(edtFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                            .addComponent(edtCodFornecedor)))
                    .addComponent(btnAlterarFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(edtDtEmissão, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(edtDtChegada, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblProd)
                                .addComponent(lblCodProd))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblDescUn)
                                .addComponent(lblCusto)
                                .addComponent(lblqtd)
                                .addComponent(lblAcrescUn)
                                .addComponent(lblCustoProd)
                                .addComponent(lblUn)))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(edtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edtValorItem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edtQuantItem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edtDescItem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edtAcrescUn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edtCustoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edtCodProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                            .addComponent(edtUnMedida, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnRemoverItem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlterarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblValorFrete)
                            .addComponent(lblSeguro)
                            .addComponent(lblOutrasDespesas))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(edtValorSeguro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edtValorFrete, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edtOutrasDespesas, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdTipoFreteCIF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdFreteFOB, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(edtCondicaoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edtCodCondicaoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnAltCondicao, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel17)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(edtTotalAcrescimos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel20)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(edtCustoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel19)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(edtTotalDescontos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDescricaoForm1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane3.setViewportView(jPanel1);

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Campos obrigatorios são marcados com ' * '");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Status : ");

        lblStatus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblStatus.setText("Ativa");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDescricaoForm, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(42, 42, 42)
                        .addComponent(edtFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescricaoForm)
                    .addComponent(jLabel9)
                    .addComponent(lblStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edtFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(btnSalvar)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bloqueia() {
        this.edtCondicaoPagamento.setEditable(false);
        this.edtFuncionario.setEditable(false);
        this.edtDtChegada.setEnabled(false);
        this.edtDtEmissão.setEnabled(false);
        this.edtValorFrete.setEditable(false);
        this.edtOutrasDespesas.setEditable(false);
        this.edtValorSeguro.setEditable(false);
        this.tblItens.setEnabled(false);
        this.tblContasApagar.setEnabled(false);
      //  this.edtCodFornecedor.setEnabled(false);
        this.edtCodCondicaoPagamento.setEnabled(false);
        this.rdTipoFreteCIF.setEnabled(false);
        this.rdFreteFOB.setEnabled(false);
        this.lblCodProd.setEnabled(false);
        this.lblAcrescUn.setEnabled(false);
        this.lblDescUn.setEnabled(false);
        this.lblUn.setEnabled(false);
        this.lblCustoProd.setEnabled(false);
        this.lblCusto.setEnabled(false);
        this.lblqtd.setEnabled(false);
        this.lblProd.setEnabled(false);
        this.edtCodProduto.setEnabled(false);
        this.edtQuantItem.setEnabled(false);
        this.edtDescItem.setEnabled(false);
        this.edtNome.setEnabled(false);
        this.edtCustoProduto.setEnabled(false);
        this.edtAcrescUn.setEnabled(false);
        this.edtUnMedida.setEnabled(false);
        this.edtAcrescUn.setEnabled(false);
        this.edtValorItem.setEnabled(false);
        btnAddItem.setEnabled(false);
        btnAltCondicao.setEnabled(false);
      //  btnAlterarFornecedor.setEnabled(false);
        btnRemoverItem.setEnabled(false);
        btnCancelar.setEnabled(false);
        btnSalvar.setEnabled(false);
        btnPesquisarItem.setEnabled(false);
        btnAlterarItem.setEnabled(false);
    }

    private void desbloqueia() {
        this.edtCondicaoPagamento.setEditable(true);
        this.edtFuncionario.setEditable(true);
        this.edtDtChegada.setEnabled(true);
        this.edtDtEmissão.setEnabled(true);
        this.edtValorFrete.setEditable(true);
        this.edtOutrasDespesas.setEditable(true);
        this.edtValorSeguro.setEditable(true);
        this.tblItens.setEnabled(true);
        this.tblContasApagar.setEnabled(true);
        this.edtCodFornecedor.setEnabled(true);
        this.edtCodCondicaoPagamento.setEnabled(true);
        this.rdTipoFreteCIF.setEnabled(true);
        this.rdFreteFOB.setEnabled(true);
        this.lblCodProd.setEnabled(true);
        this.lblAcrescUn.setEnabled(true);
        this.lblDescUn.setEnabled(true);
        this.lblUn.setEnabled(true);
        this.lblCustoProd.setEnabled(true);
        this.lblCusto.setEnabled(true);
        this.lblqtd.setEnabled(true);
        this.lblProd.setEnabled(true);
        this.edtCodProduto.setEnabled(true);
        this.edtQuantItem.setEnabled(true);
        this.edtDescItem.setEnabled(true);
        this.edtNome.setEnabled(true);
        this.edtCustoProduto.setEnabled(true);
        this.edtAcrescUn.setEnabled(true);
        this.edtUnMedida.setEnabled(true);
        this.edtAcrescUn.setEnabled(true);
        this.edtValorItem.setEnabled(true);
        btnAddItem.setEnabled(true);
        btnAltCondicao.setEnabled(true);
        btnAlterarFornecedor.setEnabled(true);
        btnRemoverItem.setEnabled(true);
        btnCancelar.setEnabled(true);
        btnSalvar.setEnabled(true);
        btnPesquisarItem.setEnabled(true);
        btnAlterarItem.setEnabled(true);
    }

    public void bloqueiaEDT() {
        this.edtCondicaoPagamento.setEditable(false);
        this.edtFuncionario.setEditable(false);
        this.edtDtChegada.setEnabled(false);
        this.edtNumeroNota.setEnabled(false);
        this.edtDtEmissão.setEnabled(false);
        this.edtTotalAcrescimos.setEditable(false);
        this.edtTotalDescontos.setEditable(false);
        edtNumeroSerie.setEditable(false);
        this.edtValorFrete.setEditable(false);
        this.edtOutrasDespesas.setEditable(false);
        this.edtValorSeguro.setEditable(false);
        this.edtModeloNota.setEditable(false);
        this.tblItens.setEnabled(false);
        this.tblContasApagar.setEnabled(false);
        this.edtCodFornecedor.setEnabled(false);
        this.edtCodCondicaoPagamento.setEnabled(false);
        this.rdTipoFreteCIF.setEnabled(false);
        this.rdFreteFOB.setEnabled(false);

        this.lblCodProd.setVisible(false);
        this.lblAcrescUn.setVisible(false);
        this.lblDescUn.setVisible(false);
        this.lblUn.setVisible(false);
        this.lblCustoProd.setVisible(false);
        this.lblCusto.setVisible(false);
        this.lblqtd.setVisible(false);
        this.lblProd.setVisible(false);
        this.edtCodProduto.setVisible(false);
        this.edtQuantItem.setVisible(false);
        this.edtDescItem.setVisible(false);
        this.edtNome.setVisible(false);
        this.edtCustoProduto.setVisible(false);
        this.edtAcrescUn.setVisible(false);
        this.edtUnMedida.setVisible(false);
        this.edtAcrescUn.setVisible(false);
        this.edtValorItem.setVisible(false);
        btnAddItem.setVisible(false);
        btnAltCondicao.setVisible(false);
        btnAlterarFornecedor.setVisible(false);
        btnRemoverItem.setVisible(false);
        btnCancelar.setVisible(false);
        btnSalvar.setVisible(false);
        btnPesquisarItem.setVisible(false);
        btnAlterarItem.setVisible(false);
    }

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        if (btnCancelar.getText().equalsIgnoreCase("voltar"))
            dispose();
        if (JOptionPane.showInternalConfirmDialog(this, "Nenhum dado da compra será salvo, deseja realmente cancelar",
                "Atenção", JOptionPane.YES_NO_OPTION) == 0) {
            dispose();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private boolean carregaValidaCompra() {
        if (this.edtNumeroSerie.getValue() == null) {
            JOptionPane.showMessageDialog(this, "Numero da nota é obrigatório");
            this.edtNumeroNota.requestFocus();
            return false;
        }
        if (edtNumeroSerie.getValue() == null) {
            JOptionPane.showMessageDialog(this, "Numero de série nota é obrigatório");
            this.edtNumeroSerie.requestFocus();
            return false;
        }
        if (edtModeloNota.getText() == null) {
            JOptionPane.showMessageDialog(this, "Modelo da nota é obrigatório");
            this.edtModeloNota.requestFocus();
            return false;
        }

        if (compra.getFornecedor() == null) {
            JOptionPane.showMessageDialog(this, "Fornecedor não informado");
            edtCodFornecedor.requestFocus();
            return false;
        }

        if (compra.getItensProdutos().isEmpty()) {
            JOptionPane.showMessageDialog(this, "A compra deve possuir ao menos 1 item");
            this.edtCodProduto.requestFocus();
            return false;
        }
        if (compra.getCondicaoPagamento() == null) {
            JOptionPane.showMessageDialog(this, "Condição de pagamento é obrigatório");
            this.edtCodCondicaoPagamento.requestFocus();
            return false;
        }
        if (edtDtEmissão.getDate() == null) {
            JOptionPane.showMessageDialog(this, "A compra não possui data de emissão");
            this.edtDtEmissão.requestFocus();
            return false;
        }
        if (edtDtChegada.getDate() == null) {
            JOptionPane.showMessageDialog(this, "A compra não possui data de chegada");
            this.edtDtChegada.requestFocus();
            return false;
        }
        if (edtDtEmissão.getDate().compareTo(new Date()) > 0){
            JOptionPane.showMessageDialog(this, "A data de emissão deve ser igual ou menor que a data de hoje");
            this.edtDtChegada.requestFocus();
            return false;
        }
        if (edtDtEmissão.getDate().compareTo(edtDtChegada.getDate()) < 0) {
            JOptionPane.showMessageDialog(this, "A data de chegada deve ser igual ou maior que a data de emissão");
            this.edtDtChegada.requestFocus();
            return false;
        }

        if (contas.isEmpty()) {
            JOptionPane.showMessageDialog(this, "A compra não possui contas a pagar");
            this.edtCodCondicaoPagamento.requestFocus();
            return false;
        }
        if (rdTipoFreteCIF.isSelected()) {
            this.compra.setTipoFrete(TipoFrete.CIF);
            this.compra.setValorFrete(0D);
            this.compra.setValorSeguro(0D);
            this.compra.setOutrasDespesas(0D);
            this.compra.getItensProdutos().stream().forEach(itemProduto -> itemProduto.setValorRateio(0D));
        } else {
            this.compra.setTipoFrete(TipoFrete.FOB);
            this.compra.setValorFrete((Double) edtValorFrete.getValue());
            this.compra.setValorSeguro((Double) edtValorSeguro.getValue());
            this.compra.setOutrasDespesas((Double) edtOutrasDespesas.getValue());
        }

        this.compra.setAtivo(true);
        this.compra.setContas(contas);
        this.compra.setModeloNota(edtModeloNota.getText());
        this.compra.setNumeroNota(Integer.parseInt(edtNumeroNota.getValue().toString()));
        this.compra.setNumSerieNota(Integer.parseInt(edtNumeroSerie.getValue().toString()));
        this.compra.setDtEmisssao(edtDtEmissão.getDate());
        this.compra.setDtChegada(edtDtChegada.getDate());
        this.buildItens();
        return true;
    }

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (!this.carregaValidaCompra())
            return;

        CompraService service = new CompraService();
        try {

            service.setAutoCommit(false);
            service.save(compra);
            ProdutoService produtoService = new ProdutoService();

            List<Produto> produtos = this.atualizaEstoque();
            for (Produto p : produtos){
                produtoService.update(p);
            }

            service.commit();
            service.setAutoCommit(true);

            JOptionPane.showMessageDialog(this, "Compra salva com sucesso");
            dispose();

        } catch (SQLException ex) {
            try {
                service.clear();
            } catch (SQLException errro){
                JOptionPane.showConfirmDialog(this, "Falha ao reconectar no banco");
            }
            JOptionPane.showMessageDialog(this, "Falha ao salvar dados: \n " + ex.getMessage());
            return;
        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private List<Produto> atualizaEstoque() {
        List<Produto> produtos = new ArrayList<>();
        this.compra.getItensProdutos().stream().forEach(itemProduto -> {
            Produto p = new Produto();
            p = p.buildProduto(itemProduto);
            p.setPrecoCompra(itemProduto.getValorUnitario() + itemProduto.getValorRateio() - itemProduto.getDescontoUnitario() + itemProduto.getAcrescimoUnitario());
            p.setQuantidadeEstoque(itemProduto.getQuantidadeEstoque() + itemProduto.getQuantidade());
            p.setUltimoFornecedor(compra.getFornecedor());
            p.setDataUltimaCompra(new Date());
            produtos.add(p);
        });
        return produtos;
    }

    private void btnPesquisarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarItemActionPerformed
        PesquisarProduto.Callback callback = (p) -> {
            if (p == null) {
                if (itemProdutoSelecionado != null) {
                    edtCodProduto.setText(this.itemProdutoSelecionado.getId().toString());
                }
                return;
            } else {
                Optional<ItemProduto> item = compra.getItensProdutos().stream().filter(itemProduto -> itemProduto.getId().equals(p.getId())).findAny();
                if (item.isPresent()) {
                    if (JOptionPane.showConfirmDialog(this, "Item selecionado já existe na venda, deseja edita-lo ?",
                            "Atenção", JOptionPane.YES_NO_OPTION) == 1) {
                        return;
                    } else {
                        itemProdutoSelecionado = item.get();
                    }
                } else {
                    this.itemProdutoSelecionado = new ItemProduto();
                    this.itemProdutoSelecionado.buildItem(p);
                }
            }
            this.edtNome.setText(p.getNome());
            this.edtValorItem.setValue(p.getPrecoCompra());
            this.edtCustoProduto.setValue(p.getPrecoCompra());
            this.edtUnMedida.setText(p.getUnidadeMedida());
            this.edtCodProduto.setText(p.getId().toString());
            this.edtValorItem.setValue(p.getPrecoCompra());
            this.edtQuantItem.setValue(1D);
            this.compra.getItensProdutos().add(itemProdutoSelecionado);
        };
        new PesquisarProduto(this, true, callback).show();
    }//GEN-LAST:event_btnPesquisarItemActionPerformed

    private void btnAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemActionPerformed
        if (itemProdutoSelecionado == null) {
            JOptionPane.showMessageDialog(this, "Nenhum produto foi selecionado");
            return;
        }
        if ((Double) edtQuantItem.getValue() < 1D) {
            JOptionPane.showMessageDialog(this, " A quantidade do produto deve ser no minimo 1");
            this.edtQuantItem.requestFocus();
            return;
        }
        if ((Double) edtCustoProduto.getValue() < 0D) {
            JOptionPane.showMessageDialog(this, "Custo do produto não pode ser menor que 0.00");
            this.edtValorItem.requestFocus();
            return;
        }

        Optional<ItemProduto> itemOptional = compra.getItensProdutos().stream().filter(item -> item.getId().equals(itemProdutoSelecionado.getId())).findAny();
        if (itemOptional.isPresent()) {
            compra.getItensProdutos().remove(itemOptional.get());
        }

        itemProdutoSelecionado.setQuantidade(Util.builDoubleDuasCasasDecimais((Double) edtQuantItem.getValue()));
        itemProdutoSelecionado.setDescontoUnitario(Util.builDoubleDuasCasasDecimais((Double) edtDescItem.getValue()));
        itemProdutoSelecionado.setAcrescimoUnitario(Util.builDoubleDuasCasasDecimais((Double) edtAcrescUn.getValue()));
        itemProdutoSelecionado.setValorUnitario(Util.builDoubleDuasCasasDecimais((Double) edtValorItem.getValue()));

        if (!compra.getItensProdutos().contains(itemProdutoSelecionado))
            this.compra.getItensProdutos().add(itemProdutoSelecionado);

        tableModelProduto.setList(compra.getItensProdutos().toArray());
        tblItens.setModel(tableModelProduto);

        this.atualizaValoTotalCompra(null);

    }//GEN-LAST:event_btnAddItemActionPerformed

    private void btnRemoverItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverItemActionPerformed
        if (tblItens.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Selecione um item para remover");
            return;
        }
        this.compra.getItensProdutos().remove(tblItens.getSelectedRow());
        this.atualizaValoTotalCompra(null);
        tableModelProduto.setList(compra.getItensProdutos().toArray());
    }//GEN-LAST:event_btnRemoverItemActionPerformed

    private void btnAlterarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarItemActionPerformed
        if (tblItens.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Selecione um item para editar");
            return;
        }
        this.itemProdutoSelecionado = compra.getItensProdutos().get(tblItens.getSelectedRow());
        this.edtNome.setText(itemProdutoSelecionado.getNome());
        this.edtValorItem.setValue(itemProdutoSelecionado.getValorUnitario());
        this.edtCustoProduto.setValue(itemProdutoSelecionado.getValor());
        this.edtUnMedida.setText(itemProdutoSelecionado.getUnidadeMedida());
        this.edtCodProduto.setText(itemProdutoSelecionado.getId().toString());
        this.compra.getItensProdutos().add(itemProdutoSelecionado);
    }//GEN-LAST:event_btnAlterarItemActionPerformed

    private void btnAlterarFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarFornecedorActionPerformed
        PesquisarFornecedor.Callback callback = (p) -> {
            if (p == null) {
                return;
            }
            this.compra.setFornecedor((Fornecedor) p);
            this.edtFornecedor.setText(p.getNome());
            this.edtCodFornecedor.setText(p.getId().toString());
        };

        new PesquisarFornecedor(this, true, callback).show();
    }//GEN-LAST:event_btnAlterarFornecedorActionPerformed

    private void btnAltCondicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltCondicaoActionPerformed
        PesquisarCondicaoPagamento.Callback callback = (condicao -> {
            if (condicao == null) {
                return;
            }
            if (this.compra.getCondicaoPagamento() != null)
                if (this.compra.getCondicaoPagamento() == condicao)
                    return;
            Optional<CondicaoPagamento> condicaoPagamentoOptional = this.compra.getFornecedor().getCondicoesPagamentos().stream().filter(condicaoPagamento -> condicao.getId().equals(condicaoPagamento.getId())).findFirst();
            if (!condicaoPagamentoOptional.isPresent()) {
                JOptionPane.showMessageDialog(this, "Condição de pagamento não permitida para o fornecedor selecionado");
                return;
            }
            this.compra.setCondicaoPagamento(condicao);
            edtCondicaoPagamento.setText(condicao.getNome());
            edtCodCondicaoPagamento.setValue(condicao.getId());
            this.buildContas();
        });
        if (this.compra.getFornecedor() == null) {
            JOptionPane.showMessageDialog(this, "Selecione um fornecedor");
            return;
        }
        new PesquisarCondicaoPagamento(this, true, callback).show();

    }//GEN-LAST:event_btnAltCondicaoActionPerformed

    //controi as contas a pagar
    public void buildContas() {
        List<Parcela> parcelas = compra.getCondicaoPagamento().getParcelas();
        Double valorTotal = (Double) edtCustoTotal.getValue();
        Integer qtd = parcelas.size();
        Double valor = valorTotal / qtd;
        this.contas.clear();
        Integer pos = 0;
        Integer tam = parcelas.size() - 1;
        for (Parcela parcela : parcelas) {
            ContaPagar conta = new ContaPagar();
            conta.setDataLancamento(new Date());
            Calendar data = new GregorianCalendar();
            data.setTime(new Date());
            data.add(Calendar.DATE, parcela.getDias());
            conta.setDataVencimento(data.getTime());
            conta.setCompra(compra);
            conta.setFormaPagamento(parcela.getFormaPagamento());

            conta.setMulta(compra.getCondicaoPagamento().getMulta());
            conta.setDesconto(compra.getCondicaoPagamento().getDesconto());
            conta.setJuros(compra.getCondicaoPagamento().getJuros());
            conta.setRecebedor(compra.getFornecedor() );
            conta.setDescricao("Conta referente a compra Num. " + compra.getNumeroNota() + ", Ser. " + compra.getNumSerieNota() +
                    ", mod. " + compra.getModeloNota());
            if (pos.equals(tam)) {
                Double valorParcelaFinal = valorTotal - contas.stream().mapToDouble(ContaPagar::getValor).sum();
                conta.setValor(valorParcelaFinal);
            } else {
                conta.setValor(util.Util.builDoubleDuasCasasDecimais(valor -
                        (compra.getCondicaoPagamento().getDesconto() * valor / 100) +
                        (compra.getCondicaoPagamento().getMulta() * valor / 100) +
                        (compra.getCondicaoPagamento().getJuros() * valor / 100))
                );
            }
            pos = pos + 1;
            this.contas.add(conta);
        }
        ;
        this.tableModelContas.setList(contas.toArray());
        this.tblContasApagar.setModel(tableModelContas);
    }

    //metodo que adiciona os itens a compra e adiciona o valor do rateio
    public void buildItens() {
        this.compra.getItensProdutos().stream().forEach(itemProduto -> itemProduto.setCompra(this.compra));
        this.compra.buildRateioItens();
    }

    //função chamada quando alterado os edt que interferem nos valores finais da compra e das parcelas
    // renomer a função para builValores
    private void atualizaValoTotalCompra(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_atualizaValoTotalCompra
        if (compra == null)
            return;

        Double seguro = Util.builDoubleDuasCasasDecimais((Double) edtValorSeguro.getValue());
        Double frete = Util.builDoubleDuasCasasDecimais((Double) edtValorFrete.getValue());
        Double outrasDespesas = Util.builDoubleDuasCasasDecimais((Double) edtOutrasDespesas.getValue());
        Double totaisCustoUn = Util.builDoubleDuasCasasDecimais(compra.getTotaisCustoUn());

        Double total = Util.builDoubleDuasCasasDecimais(totaisCustoUn + frete + outrasDespesas + seguro); //compra.getTotaisCustoUn() + (Double) edtValorSeguro.getValue() + (Double) edtOutrasDespesas.getValue() + (Double) edtValorFrete.getValue();

        edtTotalDescontos.setValue(compra.getTotaisDescontos());
        edtTotalAcrescimos.setValue(compra.getTotaisAcrescimos());
        edtCustoTotal.setValue(total);
        if (compra.getCondicaoPagamento() != null) {
            buildContas();
        }
    }//GEN-LAST:event_atualizaValoTotalCompra

    private void rdTipoFreteCIFItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdTipoFreteCIFItemStateChanged
        if (rdTipoFreteCIF.isSelected()) {
            edtValorFrete.setVisible(false);
            edtValorSeguro.setVisible(false);
            edtOutrasDespesas.setVisible(false);
            lblOutrasDespesas.setVisible(false);
            lblSeguro.setVisible(false);
            lblValorFrete.setVisible(false);
            compra.setTipoFrete(TipoFrete.CIF);
        } else {
            compra.setTipoFrete(TipoFrete.FOB);
            edtValorFrete.setVisible(true);
            edtValorSeguro.setVisible(true);
            edtOutrasDespesas.setVisible(true);
            lblOutrasDespesas.setVisible(true);
            lblSeguro.setVisible(true);
            lblValorFrete.setVisible(true);
        }
    }//GEN-LAST:event_rdTipoFreteCIFItemStateChanged

    private void edtCodProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtCodProdutoKeyPressed
        if (evt.getKeyCode() == KeyCode.ENTER.impl_getCode()) {
            Produto p = null;
            try {
                p = ((Produto) new ProdutoService().getByID(Integer.parseInt(edtCodProduto.getText())));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
            if (p == null) {
                if (itemProdutoSelecionado != null) {
                    edtCodProduto.setText(this.itemProdutoSelecionado.getId().toString());
                }
                return;
            } else {
                Integer id = p.getId();
                Optional<ItemProduto> item = compra.getItensProdutos().stream().filter(itemProduto -> itemProduto.getId().equals(id)).findAny();
                if (item.isPresent()) {
                    if (JOptionPane.showConfirmDialog(this, "Item selecionado já existe na venda, deseja edita-lo ?",
                            "Atenção", JOptionPane.YES_NO_OPTION) == 1) {
                        return;
                    } else {
                        itemProdutoSelecionado = item.get();
                    }
                } else if (!p.getAtivo()) {
                    JOptionPane.showMessageDialog(this, "Produto desativado");
                    return;
                } else {
                    this.itemProdutoSelecionado = new ItemProduto();
                    this.itemProdutoSelecionado.buildItem(p);
                }
            }
            this.edtNome.setText(p.getNome());
            this.edtCustoProduto.setValue(p.getPrecoCompra());
            this.edtUnMedida.setText(p.getUnidadeMedida());
            this.edtCodProduto.setText(p.getId().toString());
            this.edtValorItem.setValue(p.getPrecoCompra());
            this.edtQuantItem.setValue(1D);
            this.compra.getItensProdutos().add(itemProdutoSelecionado);
        }
        ;

    }//GEN-LAST:event_edtCodProdutoKeyPressed

    private void edtCodFornecedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtCodFornecedorKeyPressed
        if (evt.getKeyCode() == KeyCode.ENTER.impl_getCode()) {
            Fornecedor fornecedor = null;
            try {
                fornecedor = ((Fornecedor) new FornecedorService().getByID(Integer.parseInt(edtCodFornecedor.getText())));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
            if (fornecedor != null) {
                this.edtFornecedor.setText(fornecedor.getNome());
                this.compra.setFornecedor(fornecedor);
            } else {
                JOptionPane.showMessageDialog(this, "Nenhhum resultado encontrado");
            }
        }
    }//GEN-LAST:event_edtCodFornecedorKeyPressed

    private void edtCodCondicaoPagamentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtCodCondicaoPagamentoKeyPressed
        if (evt.getKeyCode() == KeyCode.ENTER.impl_getCode()) {
            CondicaoPagamento condicaoPagamento = null;
            try {
                condicaoPagamento = ((CondicaoPagamento) new CondicaoPagamentoService().getByID(Integer.parseInt(edtCodCondicaoPagamento.getText())));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
            if (condicaoPagamento != null) {
                if (compra.getFornecedor() == null) {
                    JOptionPane.showMessageDialog(this, "Selecione um fornecedor");
                    return;
                }
                if (!compra.getFornecedor().getCondicoesPagamentos().contains(condicaoPagamento)) {
                    JOptionPane.showMessageDialog(this, "Condicao de pagamento não permitida para o fornecedor selecionado");
                    return;
                }
                this.edtCondicaoPagamento.setText(condicaoPagamento.getNome());
                this.compra.setCondicaoPagamento(condicaoPagamento);
            }
        }
    }//GEN-LAST:event_edtCodCondicaoPagamentoKeyPressed

    private void calculaValorTotalPorItem(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_calculaValorTotalPorItem
        Double qtd = (Double) edtQuantItem.getValue();
        Double valorItem = (Double) edtValorItem.getValue();
        Double descUn = (Double) edtDescItem.getValue();
        Double acresUn = (Double) edtAcrescUn.getValue();
        edtCustoProduto.setValue((valorItem * qtd) - (descUn * qtd) + (acresUn * qtd));
    }//GEN-LAST:event_calculaValorTotalPorItem

    private void edtModeloNotaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtModeloNotaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_edtModeloNotaKeyPressed

    private void edtNumeroNotaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtNumeroNotaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_edtNumeroNotaKeyPressed

    private void edtNumeroSerieKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtNumeroSerieKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_edtNumeroSerieKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddItem;
    private javax.swing.JButton btnAltCondicao;
    private javax.swing.JButton btnAlterarFornecedor;
    private javax.swing.JButton btnAlterarItem;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnPesquisarItem;
    private javax.swing.JButton btnRemoverItem;
    private javax.swing.JButton btnSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JFormattedTextField edtAcrescUn;
    private javax.swing.JFormattedTextField edtCodCondicaoPagamento;
    private javax.swing.JFormattedTextField edtCodFornecedor;
    private javax.swing.JFormattedTextField edtCodProduto;
    private javax.swing.JTextField edtCondicaoPagamento;
    private javax.swing.JFormattedTextField edtCustoProduto;
    private javax.swing.JFormattedTextField edtCustoTotal;
    private javax.swing.JFormattedTextField edtDescItem;
    private com.toedter.calendar.JDateChooser edtDtChegada;
    private com.toedter.calendar.JDateChooser edtDtEmissão;
    private javax.swing.JTextField edtFornecedor;
    private javax.swing.JTextField edtFuncionario;
    private javax.swing.JFormattedTextField edtModeloNota;
    private javax.swing.JTextField edtNome;
    private javax.swing.JFormattedTextField edtNumeroNota;
    private javax.swing.JFormattedTextField edtNumeroSerie;
    private javax.swing.JFormattedTextField edtOutrasDespesas;
    private javax.swing.JFormattedTextField edtQuantItem;
    private javax.swing.JFormattedTextField edtTotalAcrescimos;
    private javax.swing.JFormattedTextField edtTotalDescontos;
    private javax.swing.JTextField edtUnMedida;
    private javax.swing.JFormattedTextField edtValorFrete;
    private javax.swing.JFormattedTextField edtValorItem;
    private javax.swing.JFormattedTextField edtValorSeguro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAcrescUn;
    private javax.swing.JLabel lblCodProd;
    private javax.swing.JLabel lblCusto;
    private javax.swing.JLabel lblCustoProd;
    private javax.swing.JLabel lblDescUn;
    private javax.swing.JLabel lblDescricaoForm;
    private javax.swing.JLabel lblDescricaoForm1;
    private javax.swing.JLabel lblOutrasDespesas;
    private javax.swing.JLabel lblProd;
    private javax.swing.JLabel lblSeguro;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblUn;
    private javax.swing.JLabel lblValorFrete;
    private javax.swing.JLabel lblqtd;
    private javax.swing.JRadioButton rdFreteFOB;
    private javax.swing.JRadioButton rdTipoFreteCIF;
    private javax.swing.JTable tblContasApagar;
    private javax.swing.JTable tblItens;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
