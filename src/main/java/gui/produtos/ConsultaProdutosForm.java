/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.produtos;

import gui.modeltable.TableModelProduto;
import gui.swing.SociusTab;
import gui.swing.WindowPadrao;
import lib.dao.imp.produto.ProdutoDao;
import lib.model.grupo.Grupo;
import lib.model.interno.ModuloSistema;
import lib.model.produto.Produto;
import lib.service.ProdutoService;

import javax.swing.*;
import java.awt.*;
import java.util.List;

/**
 *
 * @author Diego
 */
public class ConsultaProdutosForm<T> extends SociusTab implements WindowPadrao {
    private TableModelProduto modelo=new TableModelProduto();
    private List<Produto> produtos;
    private CadastroProdutos cadP;
    private Produto produtoselecionado;

    /**
     * Creates new form ConsultaPanel
     */
    public ConsultaProdutosForm(Window parent) {
        super(parent, ModuloSistema.PRODUTOS_SERVICOS);
        initComponents();
        initTabela();
    }

    public void initTabela(){
        modelo = new TableModelProduto();
        try {
            produtos = new ProdutoService().getAll("");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        modelo.setList(produtos.toArray());
        jTable1.setModel(modelo);
        if (!produtos.isEmpty())
            jTable1.setRowSelectionInterval(0,0);
        this.jTable1.getColumnModel().getColumn(0).setPreferredWidth(30);
        this.jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
        this.jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
        this.jTable1.getColumnModel().getColumn(3).setPreferredWidth(100);
        this.jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);
        this.jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
        this.jTable1.getColumnModel().getColumn(6).setPreferredWidth(30);
        this.jTable1.getColumnModel().getColumn(7).setPreferredWidth(30);
        this.jTable1.getColumnModel().getColumn(8).setPreferredWidth(80);
        this.jTable1.getColumnModel().getColumn(9).setPreferredWidth(80);
        this.jTable1.getColumnModel().getColumn(10).setPreferredWidth(80);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnPesquisar = new javax.swing.JButton();
        edtPesquisa = new javax.swing.JTextField();
        btnExcluirDesativar = new javax.swing.JButton();
        btnVisualizar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setName("Consulta"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnPesquisar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPesquisar.setText("pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnExcluirDesativar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnExcluirDesativar.setText("excluir");
        btnExcluirDesativar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirDesativarActionPerformed(evt);
            }
        });

        btnVisualizar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnVisualizar.setText("visualizar");
        btnVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarActionPerformed(evt);
            }
        });

        btnAlterar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAlterar.setText("alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnNovo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVisualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluirDesativar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(edtPesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPesquisar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPesquisar)
                    .addComponent(edtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluirDesativar)
                    .addComponent(btnVisualizar)
                    .addComponent(btnAlterar)
                    .addComponent(btnNovo))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {
        CadastroProdutos.Callback callback = (produto -> {
            try {
                produtos = new  ProdutoService().getAll("");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this,"Falha ao retornar dados");
            }
            modelo.setList(produtos.toArray());
            jTable1.setModel(modelo);
            Integer pos = getPosicao(produto);
            jTable1.setRowSelectionInterval(pos,pos);
        });
        new CadastroProdutos(getWindowParent(),true, new Produto(), callback).show();
    }

    private Integer getPosicao(Produto produto){
        try {
            if (produto.getId() == null)
                produto = new ProdutoService().getLast();
        } catch (Exception e) {
            e.printStackTrace();
        }

        Integer tam = produtos.size();
        Integer pos = 0;
        boolean achou =false;
        while ( pos < tam && !achou ){
            if (produtos.get(pos).getId().equals(produto.getId())) {
                achou = true;
            } else
                pos++;
        }
        return pos;
    }

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {
        Integer linha=jTable1.getSelectedRow();
        if (linha<0) {
            JOptionPane.showMessageDialog(this, "selecione um registro");
            return;
        }
        produtoselecionado=produtos.get(linha);
        CadastroProdutos.Callback callback = (produto -> {
            try {
                produtos = new  ProdutoService().getAll("");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this,"Falha ao retornar dados");
            }
            Integer pos = getPosicao(produto);
            jTable1.setRowSelectionInterval(pos,pos);
        });
        cadP=new CadastroProdutos(getWindowParent(), true, produtoselecionado, callback);
        cadP.carregarcampos();
        cadP.desbloqueiaedt();
        cadP.show();
    }

    private void btnVisualizarActionPerformed(java.awt.event.ActionEvent evt) {
        Integer linha=jTable1.getSelectedRow();
        if (linha<0) {
            JOptionPane.showMessageDialog(this, "selecione um registro");
            return;
        }
        produtoselecionado=produtos.get(linha);

        cadP = new CadastroProdutos(getWindowParent(), true, produtoselecionado, null );
        cadP.carregarcampos();
        cadP.bloqueiaedt();
        cadP.show();
    }

    private void btnExcluirDesativarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirDesativarActionPerformed
        if (jTable1.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Selecione um registro para continuar");
            return;
        }
        produtoselecionado = produtos.get(jTable1.getSelectedRow());
        CadastroProdutos.Callback callback = (produto -> {
            try {
                produtos = new  ProdutoService().getAll("");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this,"Falha ao retornar dados");
            }
            Integer pos = produtos.indexOf(produto);
            jTable1.setRowSelectionInterval(pos,pos);
        });
        CadastroProdutos cadastroProdutos = new CadastroProdutos(getWindowParent(), true, produtoselecionado, callback);
        cadastroProdutos.carregarcampos();
        cadastroProdutos.bloqueiaedt();
        cadastroProdutos.show();
        try {
            new ProdutoService().deleteByID(produtoselecionado.getId());
            JOptionPane.showMessageDialog(this, "Excluido com sucesso");
        } catch (Exception e) {
            if (JOptionPane.showConfirmDialog(this,"Não é possivel excluir o registro, deseja desativa-lo?", "ATENÇÂO", JOptionPane.YES_NO_OPTION)==0) {
                if (!produtoselecionado.getAtivo())
                    JOptionPane.showMessageDialog(this, "Produto já está desativada");
                try {
                    new ProdutoService().update(produtoselecionado);
                    JOptionPane.showMessageDialog(this,
                            "Desativado com sucesso"
                    );
                    return;
                } catch (Exception e1) {
                    JOptionPane.showMessageDialog(this, "Não foi possivel desativar");
                    return;
                }
            }
        }
        cadastroProdutos.dispose();
        try {
            produtos = new ProdutoService().getAll("");
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Falha ao retornar dados");
        }
        modelo.setList(produtos.toArray());
        if (!produtos.isEmpty())
            jTable1.setRowSelectionInterval(0,0);
    }//GEN-LAST:event_btnExcluirDesativarActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            produtos = new ProdutoService().getAll(edtPesquisa.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        if (produtos.isEmpty())
            if (evt==null)
                JOptionPane.showMessageDialog(this, "Nenhum resultado encontrado");
        modelo.setList(produtos.toArray());
        this.jTable1.setModel(modelo);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnExcluirDesativar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnVisualizar;
    private javax.swing.JTextField edtPesquisa;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
