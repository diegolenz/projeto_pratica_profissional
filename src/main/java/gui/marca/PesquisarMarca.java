/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.marca;

import gui.modeltable.TableModelMarca;

import gui.pessoas.fornecedores.CadastroFornecedorForm;
import gui.swing.DialogPadrao;
import lib.model.interno.ModuloSistema;
import lib.model.interno.NivelAcessoModulo;
import lib.model.marca.Marca;
import lib.service.MarcaService;

import javax.swing.*;
import java.awt.*;
import java.util.*;
import java.util.List;

/**
 *
 * @author diego.lenz
 */
public class PesquisarMarca extends DialogPadrao {
    private TableModelMarca tableModelMarca;
    private PesquisarMarca.Callback callback;
    private List<Marca> marcas;
    private MarcaService marcaService;
    private CadastrarMarcaForm cadastrarMarcaForm;
    private Marca marcaSelecionada;

    /**
     * Creates new form Pesquisar
     */

    public interface Callback {

        void handle(Marca marca);
    }

    public PesquisarMarca( Window parent, boolean modal, PesquisarMarca.Callback callBack) {
        super(parent, modal, ModuloSistema.MARCAS, NivelAcessoModulo.SOMENTE_LEITURA);
        this.callback=callBack;
        tableModelMarca =new TableModelMarca();
        marcaService = new MarcaService();
        marcaSelecionada = new Marca();
        initComponents();
        btnpesquisarActionPerformed(null);
        initTable();
    }

    public void initTable(){
        this.tabela.getColumnModel().getColumn(0).setPreferredWidth(50);
        this.tabela.getColumnModel().getColumn(1).setPreferredWidth(400);
        this.tabela.getColumnModel().getColumn(2).setPreferredWidth(50);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        edtpesquisa = new javax.swing.JFormattedTextField();
        btnpesquisar = new javax.swing.JToggleButton();
        btnselecionar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        btnNovo = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnVisualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consultar marca");
        setBackground(new java.awt.Color(255, 255, 255));
        setLocationByPlatform(true);
        setModal(true);
        setResizable(false);

        edtpesquisa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnpesquisar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnpesquisar.setText("Pesquisar");
        btnpesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpesquisarActionPerformed(evt);
            }
        });

        btnselecionar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnselecionar.setText("selecionar");
        btnselecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnselecionarActionPerformed(evt);
            }
        });

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabela.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(tabela);

        btnNovo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnAlterar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAlterar.setText("alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnVisualizar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnVisualizar.setText("Visualizar");
        btnVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVisualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnselecionar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(edtpesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnpesquisar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edtpesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnpesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluir)
                    .addComponent(btnAlterar)
                    .addComponent(btnNovo)
                    .addComponent(btnselecionar)
                    .addComponent(btnVisualizar))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void btnpesquisarActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            marcas= marcaService.getAll(edtpesquisa.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        tableModelMarca.setList(marcas.toArray());
       tabela.setModel(tableModelMarca);
       if (marcas.isEmpty() && evt != null){
           JOptionPane.showMessageDialog(this, "Nenhum resultado encontrado");
       } else if (!marcas.isEmpty()){
           tabela.setRowSelectionInterval(0,0);
       }
    }

    private void btnselecionarActionPerformed(java.awt.event.ActionEvent evt) {
        if (tabela.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this , "Nenhuma pessoa selecionada");
            return;
        } else {
            marcaSelecionada = (Marca) marcas.get(tabela.getSelectedRow());
            if (!marcaSelecionada.getAtivo()) {
                JOptionPane.showMessageDialog(this,"Marca selecionado nÃ£o esta ativa");
                return;
            }
            callback.handle(marcaSelecionada);
            this.dispose();
        }
    }

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt){
        CadastrarMarcaForm.Callback callback = (marca -> {
            try {
                marcas = new MarcaService().getAll("");
            } catch (Exception ex){
                System.out.println(ex);
            }
            tableModelMarca.setList(marcas.toArray());

            if (!marcas.isEmpty()) {
                try {
                    marca = new MarcaService().findLast();
                } catch (Exception e) {
                    e.printStackTrace();
                }

                Integer tam = marcas.size();
                Integer pos = 0;
                boolean achou =false;
                while ( pos < tam && !achou ){
                    if (marcas.get(pos).getId().equals(marca.getId())) {
                        achou =true;
                    } else
                      pos++;
                }
                tabela.setRowSelectionInterval(pos,pos);
            }
        });
        new CadastrarMarcaForm(this, true, new Marca(), callback).show();
    }

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {
        if (this.tabela.getSelectedRow()<0){
            JOptionPane.showMessageDialog(this, "Selecione um registro");
            return;
        }
        marcaSelecionada=marcas.get(this.tabela.getSelectedRow());
        CadastrarMarcaForm.Callback callback = (marca -> {
            try {
                marcas = new MarcaService().getAll("");
            } catch (Exception ex){
                System.out.println(ex);
            }
            tableModelMarca.setList(marcas.toArray());

            if (!marcas.isEmpty()) {
                tabela.setRowSelectionInterval(getPosicao(marca), getPosicao(marca));
            }
        });
        cadastrarMarcaForm= new CadastrarMarcaForm(this, true,  marcaSelecionada, callback);
        cadastrarMarcaForm.carregaEDT();
        cadastrarMarcaForm.show();
    }

    private Integer getPosicao(Marca marca){
        try {
            if (marca.getId() == null)
                marca = new MarcaService().findLast();
        } catch (Exception e) {
            e.printStackTrace();
        }

        Integer tam = marcas.size();
        Integer pos = 0;
        boolean achou =false;
        while ( pos < tam && !achou ){
            if (marcas.get(pos).getId().equals(marca.getId())) {
                achou =true;
            } else
                pos++;
        }
        return pos;
    }

    private void btnVisualizarActionPerformed(java.awt.event.ActionEvent evt) {
        if (this.tabela.getSelectedRow()<0){
            JOptionPane.showMessageDialog(this, "Selecione um registro");
            return;
        }
        marcaSelecionada=marcas.get(this.tabela.getSelectedRow());
        cadastrarMarcaForm= new CadastrarMarcaForm(this, true,  marcaSelecionada, null);
        cadastrarMarcaForm.carregaEDT();
        cadastrarMarcaForm.bloqueia();
        cadastrarMarcaForm.show();
    }

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {
        if (tabela.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Selecione um registro para continuar");
            return;
        }

        marcaSelecionada=marcas.get(tabela.getSelectedRow());
        CadastrarMarcaForm cadastrarMarcaForm = new CadastrarMarcaForm(getWindowParent(), true, marcaSelecionada, null );
        cadastrarMarcaForm.carregaEDT();
        cadastrarMarcaForm.bloqueia();
        cadastrarMarcaForm.show();

        try {
            if (JOptionPane.showConfirmDialog(this, "Deseja realmente excluir a marca selecionada ?", "AtenÃ§Ã£o", JOptionPane.YES_NO_OPTION) != 0) {
                cadastrarMarcaForm.dispose();
                return;
            }
            marcaService.deleteByID(marcaSelecionada.getId());
            JOptionPane.showMessageDialog(this, "Excluido com sucesso");
        } catch (Exception e) {
            if (JOptionPane.showConfirmDialog(this,"NÃ£o Ã© possivel excluir o registro, deseja desativa-lo?", "ATENÃÃO", JOptionPane.YES_NO_OPTION)==0) {
                if (!marcaSelecionada.getAtivo())
                    JOptionPane.showMessageDialog(this, "Marca jÃ¡ estÃ¡ desativada");
                try {
                    marcaService.update(marcaSelecionada);
                    JOptionPane.showMessageDialog(this,
                            "Desativado com sucesso"
                    );
                } catch (Exception e1) {
                    JOptionPane.showMessageDialog(this, "NÃ£o foi possivel desativar");
                }
            }
        }
        try {
            marcas = marcaService.getAll("");
        } catch (Exception ex){}
        tableModelMarca.setList(marcas.toArray());
        tabela.setModel(tableModelMarca);
        cadastrarMarcaForm.dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PesquisarMarca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PesquisarMarca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PesquisarMarca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PesquisarMarca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PesquisarMarca dialog = new PesquisarMarca(new javax.swing.JFrame(), true,null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnVisualizar;
    private javax.swing.JToggleButton btnpesquisar;
    private javax.swing.JButton btnselecionar;
    private javax.swing.JFormattedTextField edtpesquisa;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
